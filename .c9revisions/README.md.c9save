{"ts":1360244287627,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"musiqjs\n=======\n\nMUSIQ.js"]],"start1":0,"start2":0,"length1":0,"length2":25}]],"length":25}
{"contributors":[],"silentsave":false,"ts":1360244421155,"patch":[[{"diffs":[[-1,"musiq"],[1,"MUSIQ."],[0,"js\n="]],"start1":0,"start2":0,"length1":9,"length2":10},{"diffs":[[0,"===="],[1,"="],[0,"\n\n"],[-1,"MUSIQ.js"],[1,"#### A music analysis library for jabascript ####\n\nThis open-source MIT-licensed library is your swiss knife of musical analysis. \nIt allows you to descibe notes, intervals, chords, scales and other concepts \nused in musical theory.\n\nIt gives you all sorts of ways to work with these concepts, like looking up \nchords from notes, finding scales belonging to a certain chord, viewing the \nrelationship between notes and more."]],"start1":12,"start2":12,"length1":14,"length2":431}]],"length":443,"saved":false}
{"ts":1360244564440,"patch":[[{"diffs":[[0,"nd more."],[1,"\n\nThe Library\n-----------\n\nStill working on putting it in namespaces, writing tests and making it ready for\nproduction.\n\nGetting Started\n---------------\n\nTake a look at the MUSIQ.js primer. \n\nInstruments supported\n---------------------\n\nSo far the only instrument that is supported is the Guitar. I'm planning to support\nat least the Piano as well. "]],"start1":435,"start2":435,"length1":8,"length2":357}]],"length":792,"saved":false}
{"ts":1360244570070,"patch":[[{"diffs":[[0,"y for ja"],[-1,"b"],[1,"v"],[0,"ascript "]],"start1":47,"start2":47,"length1":17,"length2":17}]],"length":792,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364393851406,"patch":[[{"diffs":[[0,"imer. \n\n"],[1,"Testing\n-------\n\nThere is a QUnit test suite included in this release. Start the simple static file server as so:\n\n    node ./server.js\n    \nAnd then navigate to the URL:\n\n    http://musiqjs-server/test/qunit.html\n    \nYou can add new tests as well.\n\nAPI documentation\n-----------------\n\nMusiq.js uses jsdoc to create it's API documentation with a custom template that lives in\n./jsdoc-template/. You can build the documentation again by running the following command\n(provided you have jsdoc npm module installed):\n\n    ./node_modules/jsdoc/jsdoc -r src/ -d docs/ -t jsdoc-template\n    \nOr simply run the provided shell script:\n\n    ./doc\n    \n\n\n"],[0,"Instrume"]],"start1":627,"start2":627,"length1":16,"length2":663}]],"length":1439,"saved":false}
{"ts":1364393891337,"patch":[[{"diffs":[[0,"the "],[-1,"G"],[1,"g"],[0,"uitar. "],[-1,"I'm"],[1,"There are"],[0," plan"],[-1,"ning"],[1,"s"],[0," to "]],"start1":1375,"start2":1375,"length1":28,"length2":31},{"diffs":[[0,"ast the "],[-1,"P"],[1,"p"],[0,"iano as "]],"start1":1419,"start2":1419,"length1":17,"length2":17},{"diffs":[[0,"s well. "],[1,"Empty files for this can be found in the src/piano/ folder."]],"start1":1434,"start2":1434,"length1":8,"length2":67}]],"length":1501,"saved":false}
